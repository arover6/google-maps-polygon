Set up an mongo server for free and connect it from your backend (done)

Send the data points to mongo server (Figure out how to store data points) (done) 

Build a get api to get the latest points from the server (done)

On loading set.html first make a get call and display the latest polygon there, if unavailable set the zoom to Mumbai 


Steps

1) Set up a Nodejs server serving a static file on a route
2) Get Google Maps api and integrate it inside the static file 
3) Integrate polygon drawing tools 
4) Collect data on polygon completion 
5) Create apis in Node to collect the polygon data
6) Send data on button click to the server
7) Set up mongodb server with expected schema to store the data
8) Save data in mongodb on submit click
9) On static page load make a get call to see if there are any previously stored polygons
10) Create an api to handle the get call, it will query the mongo db to find the latest record else return null to the user 
11) If previous polygons exist then plot it on the map and rebuild the map to show the user the latest polygon (Change Center points of the map to the first point of the saved polygon) & also rebuild the onclick listeners set on map and buttons

Check.html
Load all the polygons and on onclick listener check if this point belongs to any of the service area of the user, do this in the .then of the response to the get polygons, make an api to fetch all the polygons 

IMPORTANT 
Need to consider rounding off of latitudes and longitudes which is being done while creating the polygon 






